"""updated models, added collection, flashcard.

Revision ID: 20b78788a743
Revises: 72ef3d656477
Create Date: 2025-04-19 19:35:42.113157

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '20b78788a743'
down_revision: Union[str, None] = '72ef3d656477'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('collections',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('is_ai_generated', sa.Boolean(), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), nullable=True),
    sa.Column('is_deleted', sa.BOOLEAN(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_collections_creator_id'), 'collections', ['creator_id'], unique=False)
    op.create_index(op.f('ix_collections_id'), 'collections', ['id'], unique=False)
    op.create_index(op.f('ix_collections_name'), 'collections', ['name'], unique=False)
    op.create_table('flashcards',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('question', sa.Text(), nullable=False),
    sa.Column('answer', sa.Text(), nullable=False),
    sa.Column('is_ai_generated', sa.Boolean(), nullable=True),
    sa.Column('collection_id', sa.Integer(), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.Column('repetition_count', sa.Integer(), nullable=False, comment='How many times this card has been reviewed'),
    sa.Column('easiness_factor', sa.Float(), nullable=False, comment='SMâ€‘2 EF; higher means easier to remember'),
    sa.Column('interval_days', sa.Integer(), nullable=False, comment='Current interval until next review (in days)'),
    sa.Column('last_reviewed', sa.DateTime(), nullable=True, comment='Timestamp of the most recent review'),
    sa.Column('next_review_due', sa.DateTime(), nullable=True, comment='Computed date when card should next surface'),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), nullable=True),
    sa.Column('is_deleted', sa.BOOLEAN(), nullable=True),
    sa.ForeignKeyConstraint(['collection_id'], ['collections.id'], ),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_flashcards_collection_id'), 'flashcards', ['collection_id'], unique=False)
    op.create_index(op.f('ix_flashcards_creator_id'), 'flashcards', ['creator_id'], unique=False)
    op.create_index(op.f('ix_flashcards_id'), 'flashcards', ['id'], unique=False)
    op.create_index(op.f('ix_flashcards_next_review_due'), 'flashcards', ['next_review_due'], unique=False)
    op.create_table('quizzes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=True),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('is_ai_generated', sa.Boolean(), nullable=True),
    sa.Column('collection_id', sa.Integer(), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), nullable=True),
    sa.Column('is_deleted', sa.BOOLEAN(), nullable=True),
    sa.ForeignKeyConstraint(['collection_id'], ['collections.id'], ),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_quizzes_collection_id'), 'quizzes', ['collection_id'], unique=False)
    op.create_index(op.f('ix_quizzes_creator_id'), 'quizzes', ['creator_id'], unique=False)
    op.create_index(op.f('ix_quizzes_id'), 'quizzes', ['id'], unique=False)
    op.create_table('quiz_questions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('question_type', sa.String(length=50), nullable=False),
    sa.Column('question', sa.JSON(), nullable=False),
    sa.Column('answer', sa.JSON(), nullable=False),
    sa.Column('quiz_id', sa.Integer(), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), nullable=True),
    sa.Column('is_deleted', sa.BOOLEAN(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['quiz_id'], ['quizzes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_quiz_questions_creator_id'), 'quiz_questions', ['creator_id'], unique=False)
    op.create_index(op.f('ix_quiz_questions_id'), 'quiz_questions', ['id'], unique=False)
    op.create_index(op.f('ix_quiz_questions_quiz_id'), 'quiz_questions', ['quiz_id'], unique=False)
    op.add_column('categories', sa.Column('color', sa.String(length=7), nullable=True))
    op.add_column('categories', sa.Column('icon', sa.String(length=255), nullable=True))
    op.drop_index('ix_categories_name', table_name='categories')
    op.create_index(op.f('ix_categories_name'), 'categories', ['name'], unique=False)
    op.add_column('notes', sa.Column('collection_id', sa.Integer(), nullable=True))
    op.drop_constraint('notes_title_key', 'notes', type_='unique')
    op.create_index(op.f('ix_notes_collection_id'), 'notes', ['collection_id'], unique=False)
    op.create_foreign_key('notes_collection_id_fkey', 'notes', 'collections', ['collection_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('notes_collection_id_fkey', 'notes', type_='foreignkey')
    op.drop_index(op.f('ix_notes_collection_id'), table_name='notes')
    op.create_unique_constraint('notes_title_key', 'notes', ['title'])
    op.drop_column('notes', 'collection_id')
    op.drop_index(op.f('ix_categories_name'), table_name='categories')
    op.create_index('ix_categories_name', 'categories', ['name'], unique=True)
    op.drop_column('categories', 'icon')
    op.drop_column('categories', 'color')
    op.drop_index(op.f('ix_quiz_questions_quiz_id'), table_name='quiz_questions')
    op.drop_index(op.f('ix_quiz_questions_id'), table_name='quiz_questions')
    op.drop_index(op.f('ix_quiz_questions_creator_id'), table_name='quiz_questions')
    op.drop_table('quiz_questions')
    op.drop_index(op.f('ix_quizzes_id'), table_name='quizzes')
    op.drop_index(op.f('ix_quizzes_creator_id'), table_name='quizzes')
    op.drop_index(op.f('ix_quizzes_collection_id'), table_name='quizzes')
    op.drop_table('quizzes')
    op.drop_index(op.f('ix_flashcards_next_review_due'), table_name='flashcards')
    op.drop_index(op.f('ix_flashcards_id'), table_name='flashcards')
    op.drop_index(op.f('ix_flashcards_creator_id'), table_name='flashcards')
    op.drop_index(op.f('ix_flashcards_collection_id'), table_name='flashcards')
    op.drop_table('flashcards')
    op.drop_index(op.f('ix_collections_name'), table_name='collections')
    op.drop_index(op.f('ix_collections_id'), table_name='collections')
    op.drop_index(op.f('ix_collections_creator_id'), table_name='collections')
    op.drop_table('collections')
    # ### end Alembic commands ###
